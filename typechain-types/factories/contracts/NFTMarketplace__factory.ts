/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../../contracts/NFTMarketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burnToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsListed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "resellToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    name: "updateListingPrice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600f81526e4c6f6f6b7353656120546f6b656e7360881b6020808301918252835180850190945260058452641314d1505560da1b9084015281519192916200006691600091620000a2565b5080516200007c906001906020840190620000a2565b5050660aa87bee53800060095550600a80546001600160a01b0319163317905562000185565b828054620000b09062000148565b90600052602060002090601f016020900481019282620000d457600085556200011f565b82601f10620000ef57805160ff19168380011785556200011f565b828001600101855582156200011f579182015b828111156200011f57825182559160200191906001019062000102565b506200012d92915062000131565b5090565b5b808211156200012d576000815560010162000132565b600181811c908216806200015d57607f821691505b602082108114156200017f57634e487b7160e01b600052602260045260246000fd5b50919050565b6125bb80620001956000396000f3fe6080604052600436106101355760003560e01c806370a08231116100ab578063ae677aa31161006f578063ae677aa314610331578063b88d4fde14610344578063be9af53614610364578063c87b56dd14610377578063e219fc7514610397578063e985e9c5146103aa57600080fd5b806370a08231146102b657806372b3b620146102d65780637b47ec1a146102e957806395d89b41146102fc578063a22cb4651461031157600080fd5b806312e85585116100fd57806312e855851461020d578063202e37401461022c57806323b872dd1461024157806342842e0e1461026157806345f8fa80146102815780636352211e1461029657600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101c95780630f08efe0146101eb575b600080fd5b34801561014657600080fd5b5061015a61015536600461217f565b6103f3565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610445565b604051610166919061235a565b34801561019d57600080fd5b506101b16101ac36600461220d565b6104d7565b6040516001600160a01b039091168152602001610166565b3480156101d557600080fd5b506101e96101e4366004612156565b610564565b005b3480156101f757600080fd5b5061020061067a565b60405161016691906122de565b34801561021957600080fd5b506009545b604051908152602001610166565b34801561023857600080fd5b5061020061082f565b34801561024d57600080fd5b506101e961025c366004612068565b610a22565b34801561026d57600080fd5b506101e961027c366004612068565b610a53565b34801561028d57600080fd5b50610200610a6e565b3480156102a257600080fd5b506101b16102b136600461220d565b610c61565b3480156102c257600080fd5b5061021e6102d136600461201c565b610cd8565b61021e6102e43660046121b7565b610d5f565b6101e96102f736600461220d565b610da1565b34801561030857600080fd5b50610184610ec3565b34801561031d57600080fd5b506101e961032c36600461211c565b610ed2565b6101e961033f36600461220d565b610ee1565b34801561035057600080fd5b506101e961035f3660046120a3565b610f59565b6101e961037236600461220d565b610f91565b34801561038357600080fd5b5061018461039236600461220d565b6110f6565b6101e96103a5366004612225565b61126d565b3480156103b657600080fd5b5061015a6103c5366004612036565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061042457506001600160e01b03198216635b5e139f60e01b145b8061043f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610454906124c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610480906124c3565b80156104cd5780601f106104a2576101008083540402835291602001916104cd565b820191906000526020600020905b8154815290600101906020018083116104b057829003601f168201915b5050505050905090565b60006104e282611365565b6105485760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061056f82610c61565b9050806001600160a01b0316836001600160a01b031614156105dd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161053f565b336001600160a01b03821614806105f957506105f981336103c5565b61066b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161053f565b6106758383611382565b505050565b6060600061068760075490565b9050600061069460085490565b6007546106a19190612480565b90506000808267ffffffffffffffff8111156106cd57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561072657816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816106eb5790505b50905060005b848110156108265730600b6000610744846001612454565b81526020810191909152604001600020600201546001600160a01b03161415610814576000600b81610777846001612454565b81526020808201929092526040908101600020815160a0810183528154815260018201546001600160a01b039081169482019490945260028201549093169183019190915260038101546060830152600481015460ff161515608083015284519092508490869081106107fa57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610810600185612454565b9350505b8061081e816124fe565b91505061072c565b50949350505050565b6060600061083c60075490565b905060008060005b8381101561089f5733600b600061085c846001612454565b81526020810191909152604001600020600201546001600160a01b0316141561088d5761088a600184612454565b92505b80610897816124fe565b915050610844565b5060008267ffffffffffffffff8111156108c957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561092257816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816108e75790505b50905060005b848110156108265733600b6000610940846001612454565b81526020810191909152604001600020600201546001600160a01b03161415610a10576000600b81610973846001612454565b81526020808201929092526040908101600020815160a0810183528154815260018201546001600160a01b039081169482019490945260028201549093169183019190915260038101546060830152600481015460ff161515608083015284519092508490869081106109f657634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610a0c600185612454565b9350505b80610a1a816124fe565b915050610928565b610a2c33826113f0565b610a485760405162461bcd60e51b815260040161053f90612403565b6106758383836114d6565b61067583838360405180602001604052806000815250610f59565b60606000610a7b60075490565b905060008060005b83811015610ade5733600b6000610a9b846001612454565b81526020810191909152604001600020600101546001600160a01b03161415610acc57610ac9600184612454565b92505b80610ad6816124fe565b915050610a83565b5060008267ffffffffffffffff811115610b0857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610b6157816020015b6040805160a081018252600080825260208083018290529282018190526060820181905260808201528252600019909201910181610b265790505b50905060005b848110156108265733600b6000610b7f846001612454565b81526020810191909152604001600020600101546001600160a01b03161415610c4f576000600b81610bb2846001612454565b81526020808201929092526040908101600020815160a0810183528154815260018201546001600160a01b039081169482019490945260028201549093169183019190915260038101546060830152600481015460ff16151560808301528451909250849086908110610c3557634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610c4b600185612454565b9350505b80610c59816124fe565b915050610b67565b6000818152600260205260408120546001600160a01b03168061043f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161053f565b60006001600160a01b038216610d435760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161053f565b506001600160a01b031660009081526003602052604090205490565b6000610d6f600780546001019055565b6000610d7a60075490565b9050610d863382611672565b610d9081856117a5565b610d9a8184611830565b9392505050565b6000818152600b602052604090206002810180546001600160a01b031990811690915560048201805460ff19166001908117909155909101805490911633179055610df0600880546001019055565b610df981611986565b600a546009546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610e35573d6000803e3d6000fd5b506040805160a0810182528281526000602080830182815283850183815260608501848152600160808701818152988652600b90945295909320935184555190830180546001600160a01b03199081166001600160a01b0393841617909155915160028401805490931691161790559051600382015590516004909101805460ff1916911515919091179055565b606060018054610454906124c3565b610edd3383836119c9565b5050565b600a546001600160a01b03163314610f545760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79206d61726b6574706c616365206f776e65722063616e20757064617460448201526f32903634b9ba34b73390383934b1b29760811b606482015260840161053f565b600955565b610f6333836113f0565b610f7f5760405162461bcd60e51b815260040161053f90612403565b610f8b84848484611a98565b50505050565b6000818152600b6020526040902060038101546001909101546001600160a01b031634821461102a576040805162461bcd60e51b81526020600482015260248101919091527f506c65617365207375626d6974207468652061736b696e67207072696365206960448201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365606482015260840161053f565b6000838152600b602052604090206002810180546001600160a01b0319908116331790915560048201805460ff1916600190811790915590910180549091169055611079600880546001019055565b6110843033856114d6565b600a546009546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156110c0573d6000803e3d6000fd5b506040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015610f8b573d6000803e3d6000fd5b606061110182611365565b6111675760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161053f565b60008281526006602052604081208054611180906124c3565b80601f01602080910402602001604051908101604052809291908181526020018280546111ac906124c3565b80156111f95780601f106111ce576101008083540402835291602001916111f9565b820191906000526020600020905b8154815290600101906020018083116111dc57829003601f168201915b50505050509050600061121760408051602081019091526000815290565b905080516000141561122a575092915050565b81511561125c578082604051602001611244929190612272565b60405160208183030381529060405292505050919050565b61126584611acb565b949350505050565b6000828152600b60205260409020600201546001600160a01b031633146112e95760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79206974656d206f776e65722063616e20706572666f726d20746869736044820152691037b832b930ba34b7b760b11b606482015260840161053f565b600954341461130a5760405162461bcd60e51b815260040161053f906123bf565b6000828152600b6020526040902060048101805460ff19169055600381018290556001810180546001600160a01b03199081163317909155600290910180549091163017905561135a6008611ba2565b610edd3330846114d6565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113b782610c61565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006113fb82611365565b61145c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161053f565b600061146783610c61565b9050806001600160a01b0316846001600160a01b031614806114a25750836001600160a01b0316611497846104d7565b6001600160a01b0316145b8061126557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16611265565b826001600160a01b03166114e982610c61565b6001600160a01b03161461154d5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161053f565b6001600160a01b0382166115af5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161053f565b6115ba600082611382565b6001600160a01b03831660009081526003602052604081208054600192906115e3908490612480565b90915550506001600160a01b0382166000908152600360205260408120805460019290611611908490612454565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166116c85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161053f565b6116d181611365565b1561171e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161053f565b6001600160a01b0382166000908152600360205260408120805460019290611747908490612454565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6117ae82611365565b6118115760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161053f565b6000828152600660209081526040909120825161067592840190611ebb565b600081116118805760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c6561737420312077656900000000604482015260640161053f565b60095434146118a15760405162461bcd60e51b815260040161053f906123bf565b6040805160a08101825283815233602080830182815230848601818152606086018881526000608088018181528b8252600b909652979097209551865591516001860180546001600160a01b03199081166001600160a01b0393841617909155925160028701805490941691161790915593516003840155516004909201805460ff19169215159290921790915561193991846114d6565b604080513381523060208201529081018290526000606082015282907fb640004f1d14576d0c209e240cad0410e0d8c0c33a09375861fbadae2588a98d9060800160405180910390a25050565b61198f81611bf9565b600081815260066020526040902080546119a8906124c3565b1590506119c65760008181526006602052604081206119c691611f3f565b50565b816001600160a01b0316836001600160a01b03161415611a2b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161053f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611aa38484846114d6565b611aaf84848484611c94565b610f8b5760405162461bcd60e51b815260040161053f9061236d565b6060611ad682611365565b611b3a5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161053f565b6000611b5160408051602081019091526000815290565b90506000815111611b715760405180602001604052806000815250610d9a565b80611b7b84611da1565b604051602001611b8c929190612272565b6040516020818303038152906040529392505050565b805480611bf15760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161053f565b600019019055565b6000611c0482610c61565b9050611c11600083611382565b6001600160a01b0381166000908152600360205260408120805460019290611c3a908490612480565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611d9657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611cd89033908990889088906004016122a1565b602060405180830381600087803b158015611cf257600080fd5b505af1925050508015611d22575060408051601f3d908101601f19168201909252611d1f9181019061219b565b60015b611d7c573d808015611d50576040519150601f19603f3d011682016040523d82523d6000602084013e611d55565b606091505b508051611d745760405162461bcd60e51b815260040161053f9061236d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611265565b506001949350505050565b606081611dc55750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611def5780611dd9816124fe565b9150611de89050600a8361246c565b9150611dc9565b60008167ffffffffffffffff811115611e1857634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611e42576020820181803683370190505b5090505b841561126557611e57600183612480565b9150611e64600a86612519565b611e6f906030612454565b60f81b818381518110611e9257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611eb4600a8661246c565b9450611e46565b828054611ec7906124c3565b90600052602060002090601f016020900481019282611ee95760008555611f2f565b82601f10611f0257805160ff1916838001178555611f2f565b82800160010185558215611f2f579182015b82811115611f2f578251825591602001919060010190611f14565b50611f3b929150611f75565b5090565b508054611f4b906124c3565b6000825580601f10611f5b575050565b601f0160209004906000526020600020908101906119c691905b5b80821115611f3b5760008155600101611f76565b600067ffffffffffffffff80841115611fa557611fa5612559565b604051601f8501601f19908116603f01168101908282118183101715611fcd57611fcd612559565b81604052809350858152868686011115611fe657600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461201757600080fd5b919050565b60006020828403121561202d578081fd5b610d9a82612000565b60008060408385031215612048578081fd5b61205183612000565b915061205f60208401612000565b90509250929050565b60008060006060848603121561207c578081fd5b61208584612000565b925061209360208501612000565b9150604084013590509250925092565b600080600080608085870312156120b8578081fd5b6120c185612000565b93506120cf60208601612000565b925060408501359150606085013567ffffffffffffffff8111156120f1578182fd5b8501601f81018713612101578182fd5b61211087823560208401611f8a565b91505092959194509250565b6000806040838503121561212e578182fd5b61213783612000565b91506020830135801515811461214b578182fd5b809150509250929050565b60008060408385031215612168578182fd5b61217183612000565b946020939093013593505050565b600060208284031215612190578081fd5b8135610d9a8161256f565b6000602082840312156121ac578081fd5b8151610d9a8161256f565b600080604083850312156121c9578182fd5b823567ffffffffffffffff8111156121df578283fd5b8301601f810185136121ef578283fd5b6121fe85823560208401611f8a565b95602094909401359450505050565b60006020828403121561221e578081fd5b5035919050565b60008060408385031215612237578182fd5b50508035926020909101359150565b6000815180845261225e816020860160208601612497565b601f01601f19169290920160200192915050565b60008351612284818460208801612497565b835190830190612298818360208801612497565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906122d490830184612246565b9695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561234d57815180518552868101516001600160a01b03908116888701528682015116868601526060808201519086015260809081015115159085015260a090930192908501906001016122fb565b5091979650505050505050565b602081526000610d9a6020830184612246565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526024908201527f5072696365206d75737420626520657175616c20746f206c697374696e6720706040820152637269636560e01b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156124675761246761252d565b500190565b60008261247b5761247b612543565b500490565b6000828210156124925761249261252d565b500390565b60005b838110156124b257818101518382015260200161249a565b83811115610f8b5750506000910152565b600181811c908216806124d757607f821691505b602082108114156124f857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156125125761251261252d565b5060010190565b60008261252857612528612543565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146119c657600080fdfea264697066735822122035e583e126e964fcf9774029f22906ee3dcd49e44825fcc7c6c51a0908b4500764736f6c63430008040033";

type NFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketplace__factory extends ContractFactory {
  constructor(...args: NFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMarketplace> {
    return super.deploy(overrides || {}) as Promise<NFTMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarketplace {
    return super.attach(address) as NFTMarketplace;
  }
  override connect(signer: Signer): NFTMarketplace__factory {
    return super.connect(signer) as NFTMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new utils.Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketplace;
  }
}
